------------------------------#1------------------------------
;My Fourth assembly language program (FirstASM.asm)

; Progam Description: Multiplying by 26 using shift
; Author: Sebastian Pfander
; Creation Date: 10/31/24
; Revisions: 
; Date: 10/31/24			Modified by: Sebastian Pfander

.386
.model flat, stdcall
.stack 4096

ExitProcess PROTO, dwExitCODE: DWORD

; Multiply AX by 26 using shifting and addition

.data
number DWORD 1234
result DWORD ?

.code
main PROC
    mov eax, number
    mov ebx, eax

    ;EAX * 16
    mov edx, eax
    shl edx, 4

    ;eax * 8
    shl eax, 3

    ;EAX * 2
    shl ebx, 1

    ;(eax * 16) + (eax* 8) + (eax * 2)
    add edx, eax
    add edx, ebx

    mov result, edx

    INVOKE ExitProcess, 0
main ENDP
END main


------------------------------#2------------------------------
;My Fourth assembly language program (FirstASM.asm)

; Progam Description: Write procedure WriteScaled
; Author: Sebastian Pfander
; Creation Date: 10/31/24
; Revisions: 
; Date: 10/31/24			Modified by: Sebastian Pfander

.386
.model flat, stdcall
.stack 4096

ExitProcess PROTO, dwExitCODE: DWORD

INCLUDE Irvine32.inc

.data
DECIMAL_OFFSET EQU 5

decimal_one BYTE "100123456789765", 0
decimal_two BYTE "9876543210", 0
decimal_three BYTE "123456789", 0

.code
main PROC
    ; First number
    lea edx, decimal_one
    mov ecx, LENGTHOF decimal_one - 1
    mov ebx, DECIMAL_OFFSET
    call WriteScaled

    ; Second number
    lea edx, decimal_two
    mov ecx, LENGTHOF decimal_two - 1
    mov ebx, 4
    call WriteScaled

    ; Third number
    lea edx, decimal_three
    mov ecx, LENGTHOF decimal_three - 1
    mov ebx, 3
    call WriteScaled

    INVOKE ExitProcess, 0
main ENDP

WriteScaled PROC
    pushad

    mov esi, edx
    mov edi, OFFSET buffer
    mov eax, ecx
    sub eax, ebx

    mov count, 0

InsertLoop:
    cmp ecx, 0
    je DisplayNumber
    lodsb
    stosb
    inc count
    dec ecx
    cmp count, eax
    jne InsertLoop

    ; Insert decimal point
    mov al, '.'
    stosb
    jmp InsertLoop

DisplayNumber:
    mov byte ptr [edi], 0
    mov edx, OFFSET buffer
    call WriteString
    call Crlf

    popad
    ret
WriteScaled ENDP

.data
buffer BYTE 50 DUP(0)
count DWORD 0

END main
------------------------------#3------------------------------
