------------------------------#1------------------------------
;My Fourth assembly language program (FirstASM.asm)

; Progam Description: Multiplying by 26 using shift
; Author: Sebastian Pfander
; Creation Date: 10/31/24
; Revisions: 
; Date: 10/31/24			Modified by: Sebastian Pfander

.386
.model flat, stdcall
.stack 4096

ExitProcess PROTO, dwExitCODE: DWORD

; Multiply AX by 26 using shifting and addition

.data
number DWORD 1234
result DWORD ?

.code
main PROC
    mov eax, number
    mov ebx, eax

    ;EAX * 16
    mov edx, eax
    shl edx, 4

    ;eax * 8
    shl eax, 3

    ;EAX * 2
    shl ebx, 1

    ;(eax * 16) + (eax* 8) + (eax * 2)
    add edx, eax
    add edx, ebx

    mov result, edx

    INVOKE ExitProcess, 0
main ENDP
END main


------------------------------#2------------------------------
; My Fourth assembly language program (FirstASM.asm)
; Program Description: Write procedure WriteScaled
; Author: Sebastian Pfander
; Creation Date: 10/31/24
; Revisions:
; Date: 10/31/24            Modified by: Sebastian Pfander

.386
.model flat, stdcall
.stack 4096

ExitProcess PROTO, dwExitCode: DWORD

INCLUDE Irvine32.inc
DECIMAL_OFFSET = 5
.data
	decimal_one BYTE "100123456789765"
	decimal_two BYTE "0123456789"
	decimal_three BYTE "9876543210"
.code
main PROC
	mov edx,OFFSET decimal_one		
	mov ecx,LENGTHOF decimal_one
	mov ebx,OFFSET DECIMAL_OFFSET
	call WriteScaled

	mov edx,OFFSET decimal_two
	mov ecx,LENGTHOF decimal_two
	mov ebx,OFFSET DECIMAL_OFFSET
	call WriteScaled

	mov edx,OFFSET decimal_three	
	mov ecx,LENGTHOF decimal_three
	mov ebx,OFFSET DECIMAL_OFFSET
	call WriteScaled
	exit
main ENDP

WriteScaled PROC

push ecx
sub ecx,ebx
mov ebx,ecx
pop ecx
mov esi,0
L1:
	.IF esi==ebx
		mov al,2Eh
		call WriteChar
	.ENDIF
	mov al,[edx]
	call WriteChar
	add edx, TYPE BYTE
	inc esi
	loop L1
	call Crlf
ret
WriteScaled ENDP
END main

END main
------------------------------#3------------------------------
